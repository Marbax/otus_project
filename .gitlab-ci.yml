---
image: docker:stable

stages:
  - test_code
  - build
  - test
  - review
  - stage
  - production

variables:
  REGISTRY_URL: http://192.168.88.12/
  ENV_URL: http://192.168.88.12
  DEV_ENV_URL: http://192.168.88.12
  PROD_ENV_URL: http://192.168.88.12
  DOCKER_DRIVER: overlay2
  APP_NAME: crawler-app # и имя директории тоже
  UI_NAME: crawler-ui # и имя директории тоже
  TAG_NAME: otus_project

###############################################
############### Test code section ##################
###############################################

test_ui_py3:
  stage: test_code
  image: python:3.6.0-alpine
  environment:
    name: $TAG_NAME/$CI_COMMIT_REF_NAME
    url: $ENV_URL/$CI_ENVIRONMENT_SLUG
  only:
    changes: #не понимает переменные окружения 
      - .gitlab-ci.yml
      - crawler-ui/ui
      - crawler-ui/tests
      - crawler-ui/requirements.txt
      - crawler-ui/requirements-test.txt
  except:
    - master
  script:
    - pip3 install -r $UI_NAME/requirements.txt -r $UI_NAME/requirements-test.txt
    - cd $UI_NAME
    - python3 -m unittest discover -s tests/
    - coverage3 run -m unittest discover -s tests/
    - coverage3 report --include ui/ui.py

test_crawler_py3:
  stage: test_code
  image: python:3.6.0-alpine
  environment:
    name: $TAG_NAME/$CI_COMMIT_REF_NAME
    url: $ENV_URL/$CI_ENVIRONMENT_SLUG
  only:
    changes: 
      - .gitlab-ci.yml
      - crawler-app/crawler
      - crawler-app/tests
      - crawler-app/requirements.txt
      - crawler-app/requirements-test.txt
  except:
    - master
  script:
    - pip3 install --upgrade pip
    - pip3 install -r $APP_NAME/requirements.txt -r $APP_NAME/requirements-test.txt
    - cd $APP_NAME
    - python3 -m unittest discover -s tests/ 
    - coverage3 run -m unittest discover -s tests/ 
    - coverage3 report --include crawler/crawler.py

###############################################
############### Build section ##################
###############################################

build_ui_job:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  environment:
    name: $TAG_NAME/$CI_COMMIT_REF_NAME
    url: $ENV_URL/$CI_ENVIRONMENT_SLUG
  only:
    changes:
      - .gitlab-ci.yml
      - crawler-ui/*
  except:
    - master
  script:
    - echo "Building and push the $CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" # переменные добавляются в вебе  
    - docker build -t "$CI_REGISTRY_USER/$UI_NAME:$TAG_NAME" $UI_NAME/
    - docker push "$CI_REGISTRY_USER/$UI_NAME:$TAG_NAME"

build_crawler_job:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  environment:
    name: $TAG_NAME/$CI_COMMIT_REF_NAME
    url: $ENV_URL/$CI_ENVIRONMENT_SLUG
  only:
    changes:
      - .gitlab-ci.yml
      - crawler-app/*
  except:
    - master
  script:
    - echo "Building and push the $CI_PROJECT_PATH:$CI_COMMIT_REF_SLUG"
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" # переменные добавляются в вебе  
    - docker build -t "$CI_REGISTRY_USER/$APP_NAME:$TAG_NAME" $APP_NAME/
    - docker push "$CI_REGISTRY_USER/$APP_NAME:$TAG_NAME"


#########################################################
############### Test container section ##################
#########################################################

test_ui_container:
  stage: test
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" # переменные добавляются в вебе 
    - docker pull "$CI_REGISTRY_USER/$UI_NAME:$TAG_NAME"
    - docker run --rm "$CI_REGISTRY_USER/$UI_NAME:$TAG_NAME" /bin/bash -c "python3 -m unittest discover -s tests/ && coverage3 run -m unittest discover -s tests/ && coverage3 report --include ui/ui.py"

test_crawler_container:
  stage: test
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" # переменные добавляются в вебе 
    - docker pull "$CI_REGISTRY_USER/$APP_NAME:$TAG_NAME"
    - docker run --rm "$CI_REGISTRY_USER/$APP_NAME:$TAG_NAME" /bin/bash -c "python3 -m unittest discover -s tests/ && coverage3 run -m unittest discover -s tests/ && coverage3 report --include crawler/crawler.py"

###############################################
############### Review section ##################
###############################################

deploy_dev_job:
  stage: review
  script:
    - echo 'Deploy'
  environment:
    name: dev
    url: $DEV_ENV_URL/

branch review:
  stage: review
  script: echo "Deploy to $CI_ENVIRONMENT_SLUG"
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: $ENV_URL/$CI_ENVIRONMENT_SLUG
  only:
    - branches
  except:
    - master

###############################################
############### Staging section ##################
###############################################

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy to staging'
  environment:
    name: stage
    url: $ENV_URL/beta

###############################################
############### Production section ##################
###############################################

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
    - master
  script:
    - echo 'Deploy to production'
  environment: #куда деплоить 
    name: production
    url: $PROD_ENV_URL/
